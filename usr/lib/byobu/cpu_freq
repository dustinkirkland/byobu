#!/bin/sh -e
#
#    cpu_freq: calculate current cpu frequency
#
#    Copyright (C) 2008 Canonical Ltd.
#    Copyright (C) 2011-2014 Dustin Kirkland
#
#    Authors: Dustin Kirkland <kirkland@byobu.org>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

__cpu_freq_detail() {
	cat /proc/cpuinfo
}

__cpu_freq() {
	local hz freq count

	if [ -r "/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq" ]; then
		read hz < /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
		fpdiv $hz "1000000" 1 # 1Ghz
		freq="$_RET"
	elif [ -r "/proc/cpuinfo" ]; then
		if egrep -q -s -i -m 1 "^cpu MHz|^clock" /proc/cpuinfo; then
			freq=$(egrep -i -m 1 "^cpu MHz|^clock" /proc/cpuinfo | awk -F"[:.]" '{ printf "%01.1f", $2 / 1000 }')
		else
			count=$(getconf _NPROCESSORS_ONLN 2>/dev/null || grep -ci "^processor" /proc/cpuinfo)
			freq=$(egrep -i -m 1 "^bogomips" /proc/cpuinfo | awk -F"[:.]" '{ print $2 }')
			freq=$(printf "%s %s" "$freq" "$count" | awk '{printf "%01.1f\n", $1/$2/1000}')
		fi
	elif hz=$(sysctl -n hw.cpufrequency 2>/dev/null); then
		fpdiv $hz "1000000000" 1 # 1Ghz
		freq="$_RET"
	elif hz=$(sysctl -n machdep.tsc_freq 2>/dev/null); then
		fpdiv $hz "1000000000" 1
		freq="$_RET"
	fi

	[ -n "$freq" ] || return
	color b c W; printf "%s" "$freq"; color -; color c W; printf "%s" "$ICON_GHz"; color --
}

# vi: syntax=sh ts=4 noexpandtab
